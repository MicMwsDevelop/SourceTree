//
// ManagerForm.cs
// 
// 電子処方箋契約情報管理一覧画面フォームクラス
// 
// Copyright (C) MIC All Rights Reserved.
// 
// Ver1.00(2023/02/14 勝呂):新規作成
//
using CommonLib.BaseFactory;
using CommonLib.BaseFactory.PrescriptionManager;
using CommonLib.Common;
using CommonLib.DB.SqlServer.PrescriptionManager;
using System;
using System.Collections.Generic;
using System.Data;
using System.Windows.Forms;

namespace PrescriptionManager.Forms
{
	public partial class ManagerForm : Form
	{
		/// <summary>
		/// 電子処方箋契約情報リスト DataSource
		/// </summary>
		private BindingSource dataGridViewUserBindingSource;

		/// <summary>
		/// 電子処方箋契約情報リスト
		/// </summary>
		private List<UsePrescription> UsePrescriptionList { get; set; }

		/// <summary>
		/// デフォルトコンストラクタ
		/// </summary>
		public ManagerForm()
		{
			InitializeComponent();

			dataGridViewUserBindingSource = null;
			UsePrescriptionList = null;
		}

		/// <summary>
		/// Form Load
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void ManagerForm_Load(object sender, EventArgs e)
		{
			this.Text = string.Format("{0}  {1}", Program.PROC_NAME, Program.VersionStr);

			// DataGridViewの設定
			dataGridViewUser.DataSource = null;
			dataGridViewUser.Rows.Clear();
			dataGridViewUser.Columns.Clear();

			// 電子処方箋契約情報リストの取得
			DataTable table = PrescriptionManagerGetIO.GetUsePrescriptionList(Program.gSettings.ConnectCharlie.ConnectionString, string.Empty);
			dataGridViewUserBindingSource = new BindingSource(table, null);
			dataGridViewUser.DataSource = dataGridViewUserBindingSource;
			UsePrescriptionList = UsePrescription.DataTableToList(table);

			// 非表示カラムの設定
			dataGridViewUser.Columns[12].Visible = false;
			dataGridViewUser.Columns[13].Visible = false;
			dataGridViewUser.Columns[14].Visible = false;
			dataGridViewUser.Columns[15].Visible = false;
			dataGridViewUser.Columns[16].Visible = false;
			dataGridViewUser.Columns[17].Visible = false;
			dataGridViewUser.ResumeLayout();

			// レコード件数の表示
			textBoxCount.Text = string.Format("{0}/{1}", dataGridViewUserBindingSource.Count, UsePrescriptionList.Count);
		}

		/// <summary>
		/// Configures the autogenerated columns, replacing their header
		/// cells with AutoFilter header cells. 
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dataGridViewUser_BindingContextChanged(object sender, EventArgs e)
		{
			// Continue only if the data source has been set.
			if (dataGridViewUser.DataSource == null)
			{
				return;
			}
			//// Add the AutoFilter header cell to each column.
			//foreach (DataGridViewColumn col in dataGridViewUser.Columns)
			//{
			//	col.HeaderCell = new DataGridViewAutoFilterColumnHeaderCell(col.HeaderCell);
			//}
			// Resize the columns to fit their contents.
			//dataGridViewUser.AutoResizeColumns();
		}

		/// <summary>
		/// 電子処方箋契約情報の変更
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dataGridViewUser_MouseDoubleClick(object sender, MouseEventArgs e)
		{
			int customerNo = (int)dataGridViewUser.CurrentRow.Cells[1].Value;
			UsePrescription data = UsePrescriptionList.Find(p => p.CustomerID == customerNo);
			if (null != data)
			{
				using (ModifyPrescriptionForm form = new ModifyPrescriptionForm())
				{
					form.Data = data;
					if (DialogResult.OK == form.ShowDialog())
					{
						// DataSourceのクリア
						((DataTable)dataGridViewUserBindingSource.DataSource).Clear();

						// 電子処方箋契約情報リストの取得
						DataTable table = PrescriptionManagerGetIO.GetUsePrescriptionList(Program.gSettings.ConnectCharlie.ConnectionString, string.Empty);
						dataGridViewUserBindingSource = new BindingSource(table, null);
						dataGridViewUser.DataSource = dataGridViewUserBindingSource;
						UsePrescriptionList = UsePrescription.DataTableToList(table);

						// 電子処方箋契約情報の選択
						int index = dataGridViewUserBindingSource.Find("申込No", form.Data.ContractID);
						dataGridViewUser.Rows[index].Selected = true;
						dataGridViewUser.FirstDisplayedScrollingRowIndex = index;

						// レコード件数の表示
						textBoxCount.Text = string.Format("{0}/{1}", dataGridViewUserBindingSource.Count, UsePrescriptionList.Count);
					}
				}
			}
		}

		/// <summary>
		/// 検索
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void buttonSearch_Click(object sender, EventArgs e)
		{
			string customerNo = textBoxCustomerNo.Text.Trim();
			if (MwsDefine.CustomerNoLength == customerNo.Length)
			{
				UsePrescription data = UsePrescriptionList.Find(p => p.CustomerID == customerNo.ToInt());
				if (null != data)
				{
					int index = dataGridViewUserBindingSource.Find("顧客No", data.CustomerID);
					dataGridViewUser.Rows[index].Selected = true;

					using (ModifyPrescriptionForm form = new ModifyPrescriptionForm())
					{
						form.Data = data;
						if (DialogResult.OK == form.ShowDialog())
						{
							// DataSourceのクリア
							((DataTable)dataGridViewUserBindingSource.DataSource).Clear();

							// 電子処方箋契約情報リストの取得
							DataTable table = PrescriptionManagerGetIO.GetUsePrescriptionList(Program.gSettings.ConnectCharlie.ConnectionString, string.Empty);
							dataGridViewUserBindingSource = new BindingSource(table, null);
							dataGridViewUser.DataSource = dataGridViewUserBindingSource;
							UsePrescriptionList = UsePrescription.DataTableToList(table);

							// 電子処方箋契約情報の選択
							index = dataGridViewUserBindingSource.Find("申込No", form.Data.ContractID);
							dataGridViewUser.Rows[index].Selected = true;
							dataGridViewUser.FirstDisplayedScrollingRowIndex = index;

							// レコード件数の表示
							textBoxCount.Text = string.Format("{0}/{1}", dataGridViewUserBindingSource.Count, UsePrescriptionList.Count);
						}
					}
				}
			}
		}
	}
}
